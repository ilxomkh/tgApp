import React, { useState } from 'react';
import tallyApiService from '../services/tallyApi.js';
import { 
  getCompletedSurveys, 
  markSurveyAsCompleted, 
  isSurveyCompleted, 
  unmarkSurveyAsCompleted, 
  clearCompletedSurveys,
  getCompletedSurveysStats 
} from '../utils/completedSurveys';


const SurveyStatusTest = () => {
  const [testResults, setTestResults] = useState({});
  const [isLoading, setIsLoading] = useState(false);
  const [testFormId, setTestFormId] = useState('wbp8L6');

  const testSurveyStatus = async () => {
    setIsLoading(true);
    try {      
      const isCompleted = await tallyApiService.checkSurveyStatus(testFormId);
      
      setTestResults({
        formId: testFormId,
        isCompleted,
        timestamp: new Date().toISOString()
      });      
    } catch (error) {
      setTestResults({
        formId: testFormId,
        error: error.message,
        timestamp: new Date().toISOString()
      });
    } finally {
      setIsLoading(false);
    }
  };

  const testAvailableForms = async () => {
    setIsLoading(true);
    try {
      
      const forms = await tallyApiService.getAvailableForms('uz');
      
      setTestResults({
        availableForms: forms,
        count: forms.length,
        timestamp: new Date().toISOString()
      });
      
      forms.forEach(form => {});
    } catch (error) {
      setTestResults({
        error: error.message,
        timestamp: new Date().toISOString()
      });
    } finally {
      setIsLoading(false);
    }
  };

  const stats = getCompletedSurveysStats();

  return (
    <div className="p-4 bg-gray-100 rounded-lg m-4">
      <h3 className="text-lg font-semibold mb-4">üß™ –¢–µ—Å—Ç –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ —Å–∫—Ä—ã—Ç–∏—è –æ–ø—Ä–æ—Å–æ–≤</h3>
      
      <div className="space-y-4">
        <div>
          <h4 className="font-medium mb-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤:</h4>
          <p>–í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö: <strong>{stats.total}</strong></p>
          <p>–°–ø–∏—Å–æ–∫: {stats.surveys.length > 0 ? stats.surveys.join(', ') : '–ù–µ—Ç –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤'}</p>
        </div>

        <div>
          <h4 className="font-medium mb-2">–¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –æ–ø—Ä–æ—Å–∞:</h4>
          <div className="flex items-center gap-2 mb-2">
            <input
              type="text"
              value={testFormId}
              onChange={(e) => setTestFormId(e.target.value)}
              className="px-3 py-1 border rounded"
              placeholder="ID –æ–ø—Ä–æ—Å–∞"
            />
            <button
              onClick={testSurveyStatus}
              disabled={isLoading}
              className="px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50"
            >
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            </button>
          </div>
          
          {testResults.formId && (
            <div className="p-2 bg-white rounded border">
              <p><strong>–û–ø—Ä–æ—Å:</strong> {testResults.formId}</p>
              <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {testResults.isCompleted ? '–ü—Ä–æ–π–¥–µ–Ω' : '–î–æ—Å—Ç—É–ø–µ–Ω'}</p>
              {testResults.error && <p><strong>–û—à–∏–±–∫–∞:</strong> {testResults.error}</p>}
              <p><strong>–í—Ä–µ–º—è:</strong> {testResults.timestamp}</p>
            </div>
          )}
        </div>

        <div>
          <h4 className="font-medium mb-2">–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤:</h4>
          <button
            onClick={testAvailableForms}
            disabled={isLoading}
            className="px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50"
          >
            –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ä–æ—Å—ã
          </button>
          
          {testResults.availableForms && (
            <div className="p-2 bg-white rounded border mt-2">
              <p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</strong> {testResults.count}</p>
              <div className="max-h-40 overflow-y-auto">
                {testResults.availableForms.map(form => (
                  <div key={form.id} className="text-sm border-b py-1">
                    <strong>{form.id}:</strong> {form.title}
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>

        <div className="flex gap-2">
          <button
            onClick={() => markSurveyAsCompleted(testFormId)}
            className="px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600"
          >
            –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π
          </button>
          <button
            onClick={() => unmarkSurveyAsCompleted(testFormId)}
            className="px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600"
          >
            –£–±—Ä–∞—Ç—å –∏–∑ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö
          </button>
          <button
            onClick={clearCompletedSurveys}
            className="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
          </button>
        </div>

        <div className="text-sm text-gray-600">
          <p><strong>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</strong></p>
          <ol className="list-decimal list-inside space-y-1">
            <li>–í–≤–µ–¥–∏—Ç–µ ID –æ–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, wbp8L6) –∏ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ä–æ—Å—ã" —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫–∏–µ –æ–ø—Ä–æ—Å—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è</li>
            <li>–ï—Å–ª–∏ –æ–ø—Ä–æ—Å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 400, –æ–Ω –¥–æ–ª–∂–µ–Ω –∏—Å—á–µ–∑–Ω—É—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞</li>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤</li>
          </ol>
        </div>
      </div>
    </div>
  );
};

export default SurveyStatusTest;
