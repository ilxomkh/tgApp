import React, { useState } from 'react';
import { 
  getCompletedSurveys, 
  markSurveyAsCompleted, 
  isSurveyCompleted, 
  unmarkSurveyAsCompleted, 
  clearCompletedSurveys,
  getCompletedSurveysStats 
} from '../utils/completedSurveys';

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤
 * –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
const CompletedSurveysTest = () => {
  const [stats, setStats] = useState(getCompletedSurveysStats());
  const [testSurveyId, setTestSurveyId] = useState('test-survey-123');

  const refreshStats = () => {
    setStats(getCompletedSurveysStats());
  };

  const handleMarkCompleted = () => {
    markSurveyAsCompleted(testSurveyId);
    refreshStats();
  };

  const handleUnmarkCompleted = () => {
    unmarkSurveyAsCompleted(testSurveyId);
    refreshStats();
  };

  const handleClearAll = () => {
    clearCompletedSurveys();
    refreshStats();
  };

  const isTestSurveyCompleted = isSurveyCompleted(testSurveyId);

  return (
    <div className="p-4 bg-gray-100 rounded-lg m-4">
      <h3 className="text-lg font-semibold mb-4">üß™ –¢–µ—Å—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤</h3>
      
      <div className="space-y-4">
        <div>
          <h4 className="font-medium mb-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h4>
          <p>–í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤: <strong>{stats.total}</strong></p>
          <p>–°–ø–∏—Å–æ–∫: {stats.surveys.length > 0 ? stats.surveys.join(', ') : '–ù–µ—Ç –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤'}</p>
        </div>

        <div>
          <h4 className="font-medium mb-2">–¢–µ—Å—Ç–æ–≤—ã–π –æ–ø—Ä–æ—Å:</h4>
          <div className="flex items-center gap-2 mb-2">
            <input
              type="text"
              value={testSurveyId}
              onChange={(e) => setTestSurveyId(e.target.value)}
              className="px-3 py-1 border rounded"
              placeholder="ID –æ–ø—Ä–æ—Å–∞"
            />
            <span className={`px-2 py-1 rounded text-sm ${
              isTestSurveyCompleted ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
            }`}>
              {isTestSurveyCompleted ? '–ü—Ä–æ–π–¥–µ–Ω' : '–ù–µ –ø—Ä–æ–π–¥–µ–Ω'}
            </span>
          </div>
          
          <div className="flex gap-2">
            <button
              onClick={handleMarkCompleted}
              className="px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600"
            >
              –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π
            </button>
            <button
              onClick={handleUnmarkCompleted}
              className="px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600"
            >
              –£–±—Ä–∞—Ç—å –∏–∑ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö
            </button>
          </div>
        </div>

        <div>
          <button
            onClick={handleClearAll}
            className="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã
          </button>
        </div>

        <div className="text-sm text-gray-600">
          <p><strong>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</strong></p>
          <ol className="list-decimal list-inside space-y-1">
            <li>–í–≤–µ–¥–∏—Ç–µ ID –æ–ø—Ä–æ—Å–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π"</li>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ–ø—Ä–æ—Å –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–£–±—Ä–∞—Ç—å –∏–∑ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö" –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ" –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è</li>
          </ol>
        </div>
      </div>
    </div>
  );
};

export default CompletedSurveysTest;
