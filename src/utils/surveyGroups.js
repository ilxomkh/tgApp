/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫—Ä—ã–≤–∞—Ç—å –æ–ø—Ä–æ—Å—ã –Ω–∞ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–∞—Ö, –µ—Å–ª–∏ –æ–¥–∏–Ω —É–∂–µ –ø—Ä–æ–π–¥–µ–Ω
 */

const SURVEY_GROUPS_KEY = 'survey_groups';

/**
 * –ì—Ä—É–ø–ø—ã –æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
 * –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à–µ–ª –æ–¥–∏–Ω –æ–ø—Ä–æ—Å –∏–∑ –≥—Ä—É–ø–ø—ã, –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è
 */
const SURVEY_GROUPS = {
  // –ì—Ä—É–ø–ø–∞ –æ–ø—Ä–æ—Å–æ–≤ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  'registration': {
    name: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ',
    surveys: ['3xqyg9', 'wbp8L6'], // —Ä—É—Å—Å–∫–∏–π –∏ —É–∑–±–µ–∫—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç—ã
    description: '–û–ø—Ä–æ—Å—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö'
  }
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –≥—Ä—É–ø–ø—ã –≤ –±—É–¥—É—â–µ–º
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—É –æ–ø—Ä–æ—Å–∞ –ø–æ –µ–≥–æ ID
 * @param {string} surveyId - ID –æ–ø—Ä–æ—Å–∞
 * @returns {string|null} ID –≥—Ä—É–ø–ø—ã –∏–ª–∏ null –µ—Å–ª–∏ –æ–ø—Ä–æ—Å –Ω–µ –≤ –≥—Ä—É–ø–ø–µ
 */
export const getSurveyGroup = (surveyId) => {
  for (const [groupId, group] of Object.entries(SURVEY_GROUPS)) {
    if (group.surveys.includes(surveyId)) {
      return groupId;
    }
  }
  return null;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–ø—Ä–æ—Å—ã –∏–∑ –≥—Ä—É–ø–ø—ã
 * @param {string} groupId - ID –≥—Ä—É–ø–ø—ã
 * @returns {Array<string>} –ú–∞—Å—Å–∏–≤ ID –æ–ø—Ä–æ—Å–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
 */
export const getSurveysInGroup = (groupId) => {
  return SURVEY_GROUPS[groupId]?.surveys || [];
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≥—Ä—É–ø–ø—ã –æ–ø—Ä–æ—Å–æ–≤
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –≥—Ä—É–ø–ø–∞–º–∏ –æ–ø—Ä–æ—Å–æ–≤
 */
export const getAllSurveyGroups = () => {
  return SURVEY_GROUPS;
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –æ–ø—Ä–æ—Å –∏–∑ –≥—Ä—É–ø–ø—ã
 * @param {string} groupId - ID –≥—Ä—É–ø–ø—ã
 * @returns {boolean} true –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –æ–ø—Ä–æ—Å –∏–∑ –≥—Ä—É–ø–ø—ã –ø—Ä–æ–π–¥–µ–Ω
 */
export const isGroupCompleted = (groupId) => {
  const surveysInGroup = getSurveysInGroup(groupId);
  const completedSurveys = getCompletedSurveys();
  
  return surveysInGroup.some(surveyId => completedSurveys.includes(surveyId));
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –¥–æ–ª–∂–µ–Ω –ª–∏ –æ–ø—Ä–æ—Å –±—ã—Ç—å —Å–∫—Ä—ã—Ç –∏–∑-–∑–∞ –≥—Ä—É–ø–ø—ã
 * @param {string} surveyId - ID –æ–ø—Ä–æ—Å–∞
 * @returns {boolean} true –µ—Å–ª–∏ –æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∫—Ä—ã—Ç
 */
export const shouldHideSurveyDueToGroup = (surveyId) => {
  const groupId = getSurveyGroup(surveyId);
  if (!groupId) {
    return false; // –û–ø—Ä–æ—Å –Ω–µ –≤ –≥—Ä—É–ø–ø–µ, –Ω–µ —Å–∫—Ä—ã–≤–∞–µ–º
  }
  
  return isGroupCompleted(groupId);
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≥—Ä—É–ø–ø–∞–º –æ–ø—Ä–æ—Å–æ–≤
 * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º
 */
export const getSurveyGroupsStats = () => {
  const stats = {};
  
  for (const [groupId, group] of Object.entries(SURVEY_GROUPS)) {
    const surveysInGroup = group.surveys;
    const completedSurveys = getCompletedSurveys();
    const completedInGroup = surveysInGroup.filter(id => completedSurveys.includes(id));
    
    stats[groupId] = {
      name: group.name,
      total: surveysInGroup.length,
      completed: completedInGroup.length,
      surveys: surveysInGroup,
      completedSurveys: completedInGroup,
      isCompleted: completedInGroup.length > 0
    };
  }
  
  return stats;
};

/**
 * –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ –æ–ø—Ä–æ—Å—ã –≤ –≥—Ä—É–ø–ø–µ –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ
 * @param {string} groupId - ID –≥—Ä—É–ø–ø—ã
 */
export const markGroupAsCompleted = (groupId) => {
  const surveysInGroup = getSurveysInGroup(groupId);
  surveysInGroup.forEach(surveyId => {
    markSurveyAsCompleted(surveyId);
  });
  console.log(`üìù –ì—Ä—É–ø–ø–∞ ${groupId} –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω–∞—è (${surveysInGroup.length} –æ–ø—Ä–æ—Å–æ–≤)`);
};

/**
 * –£–±—Ä–∞—Ç—å –≤—Å–µ –æ–ø—Ä–æ—Å—ã –≥—Ä—É–ø–ø—ã –∏–∑ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö
 * @param {string} groupId - ID –≥—Ä—É–ø–ø—ã
 */
export const unmarkGroupAsCompleted = (groupId) => {
  const surveysInGroup = getSurveysInGroup(groupId);
  surveysInGroup.forEach(surveyId => {
    unmarkSurveyAsCompleted(surveyId);
  });
  console.log(`‚ùå –ì—Ä—É–ø–ø–∞ ${groupId} —É–±—Ä–∞–Ω–∞ –∏–∑ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö (${surveysInGroup.length} –æ–ø—Ä–æ—Å–æ–≤)`);
};

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ completedSurveys.js
import { 
  getCompletedSurveys, 
  markSurveyAsCompleted, 
  unmarkSurveyAsCompleted 
} from './completedSurveys.js';
