/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–∞—Ö –≤ localStorage —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */

/**
 * –ì—Ä—É–ø–ø—ã –æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
 * –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à–µ–ª –æ–¥–∏–Ω –æ–ø—Ä–æ—Å –∏–∑ –≥—Ä—É–ø–ø—ã, –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è
 */
const SURVEY_GROUPS = {
  // –ì—Ä—É–ø–ø–∞ –æ–ø—Ä–æ—Å–æ–≤ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  'registration': {
    name: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ',
    surveys: ['3xqyg9', 'wbp8L6'], // —Ä—É—Å—Å–∫–∏–π –∏ —É–∑–±–µ–∫—Å–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç—ã
    description: '–û–ø—Ä–æ—Å—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö'
  }
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—É –æ–ø—Ä–æ—Å–∞ –ø–æ –µ–≥–æ ID
 * @param {string} surveyId - ID –æ–ø—Ä–æ—Å–∞
 * @returns {string|null} ID –≥—Ä—É–ø–ø—ã –∏–ª–∏ null –µ—Å–ª–∏ –æ–ø—Ä–æ—Å –Ω–µ –≤ –≥—Ä—É–ø–ø–µ
 */
const getSurveyGroup = (surveyId) => {
  for (const [groupId, group] of Object.entries(SURVEY_GROUPS)) {
    if (group.surveys.includes(surveyId)) {
      return groupId;
    }
  }
  return null;
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –æ–ø—Ä–æ—Å –∏–∑ –≥—Ä—É–ø–ø—ã
 * @param {string} groupId - ID –≥—Ä—É–ø–ø—ã
 * @returns {boolean} true –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –æ–ø—Ä–æ—Å –∏–∑ –≥—Ä—É–ø–ø—ã –ø—Ä–æ–π–¥–µ–Ω
 */
const isGroupCompleted = (groupId) => {
  const surveysInGroup = SURVEY_GROUPS[groupId]?.surveys || [];
  const completedSurveys = getCompletedSurveys();
  
  return surveysInGroup.some(surveyId => completedSurveys.includes(surveyId));
};

const COMPLETED_SURVEYS_KEY = 'completed_surveys';

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –¥–ª—è –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string|number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {string} –ö–ª—é—á –¥–ª—è localStorage
 */
const getUserCompletedSurveysKey = (userId) => {
  return `${COMPLETED_SURVEYS_KEY}_user_${userId}`;
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {string|null} ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null
 */
const getCurrentUserId = () => {
  try {
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ localStorage
    const user = localStorage.getItem('user');
    if (user) {
      const userData = JSON.parse(user);
      return userData.id || userData.user_id || null;
    }
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Telegram WebApp
    const tg = window?.Telegram?.WebApp;
    if (tg?.initDataUnsafe?.user?.id) {
      return String(tg.initDataUnsafe.user.id);
    }
    
    return null;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return null;
  }
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Array<string>} –ú–∞—Å—Å–∏–≤ ID –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤
 */
export const getCompletedSurveys = () => {
  try {
    const userId = getCurrentUserId();
    if (!userId) {
      console.log('‚ö†Ô∏è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫');
      return [];
    }
    
    const key = getUserCompletedSurveysKey(userId);
    const completed = localStorage.getItem(key);
    return completed ? JSON.parse(completed) : [];
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤:', error);
    return [];
  }
};

/**
 * –î–æ–±–∞–≤–∏—Ç—å –æ–ø—Ä–æ—Å –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} surveyId - ID –æ–ø—Ä–æ—Å–∞
 */
export const markSurveyAsCompleted = (surveyId) => {
  try {
    const userId = getCurrentUserId();
    if (!userId) {
      console.log('‚ö†Ô∏è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ –º–æ–∂–µ–º –æ—Ç–º–µ—Ç–∏—Ç—å –æ–ø—Ä–æ—Å –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π');
      return;
    }
    
    const key = getUserCompletedSurveysKey(userId);
    const completed = getCompletedSurveys();
    
    // –û—Ç–º–µ—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–ø—Ä–æ—Å –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π
    if (!completed.includes(surveyId)) {
      completed.push(surveyId);
      console.log(`‚úÖ –û–ø—Ä–æ—Å ${surveyId} –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
      console.log(`üìù –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤:`, completed);
    } else {
      console.log(`‚ÑπÔ∏è –û–ø—Ä–æ—Å ${surveyId} —É–∂–µ –±—ã–ª –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É - –µ—Å–ª–∏ –æ–ø—Ä–æ—Å –≤—Ö–æ–¥–∏—Ç –≤ –≥—Ä—É–ø–ø—É, –æ—Ç–º–µ—á–∞–µ–º –≤—Å—é –≥—Ä—É–ø–ø—É
    const groupId = getSurveyGroup(surveyId);
    if (groupId) {
      const surveysInGroup = SURVEY_GROUPS[groupId].surveys;
      surveysInGroup.forEach(groupSurveyId => {
        if (!completed.includes(groupSurveyId)) {
          completed.push(groupSurveyId);
          console.log(`‚úÖ –û–ø—Ä–æ—Å ${groupSurveyId} –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –∏–∑-–∑–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ (–≥—Ä—É–ø–ø–∞ ${groupId})`);
        }
      });
    }
    
    localStorage.setItem(key, JSON.stringify(completed));
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞:', error);
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ –æ–ø—Ä–æ—Å —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 * @param {string} surveyId - ID –æ–ø—Ä–æ—Å–∞
 * @returns {boolean} true –µ—Å–ª–∏ –æ–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω
 */
export const isSurveyCompleted = (surveyId) => {
  const userId = getCurrentUserId();
  if (!userId) {
    console.log('‚ö†Ô∏è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å—á–∏—Ç–∞–µ–º –æ–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–º');
    return false;
  }
  
  const completed = getCompletedSurveys();
  const isCompleted = completed.includes(surveyId);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É - –µ—Å–ª–∏ –æ–¥–∏–Ω –æ–ø—Ä–æ—Å –∏–∑ –≥—Ä—É–ø–ø—ã –ø—Ä–æ–π–¥–µ–Ω, —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ
  const groupId = getSurveyGroup(surveyId);
  if (groupId && isGroupCompleted(groupId)) {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ä–æ—Å–∞ ${surveyId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: —Å–∫—Ä—ã—Ç –∏–∑-–∑–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ (–≥—Ä—É–ø–ø–∞ ${groupId})`);
    return true;
  }
  
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ä–æ—Å–∞ ${surveyId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${isCompleted ? '–ø—Ä–æ–π–¥–µ–Ω' : '–Ω–µ –ø—Ä–æ–π–¥–µ–Ω'}`);
  console.log(`üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤:`, completed);
  return isCompleted;
};

/**
 * –£–¥–∞–ª–∏—Ç—å –æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
 * @param {string} surveyId - ID –æ–ø—Ä–æ—Å–∞
 */
export const unmarkSurveyAsCompleted = (surveyId) => {
  try {
    const userId = getCurrentUserId();
    if (!userId) {
      console.log('‚ö†Ô∏è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ –º–æ–∂–µ–º —É–¥–∞–ª–∏—Ç—å –æ–ø—Ä–æ—Å –∏–∑ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö');
      return;
    }
    
    const key = getUserCompletedSurveysKey(userId);
    const completed = getCompletedSurveys();
    const filtered = completed.filter(id => id !== surveyId);
    localStorage.setItem(key, JSON.stringify(filtered));
    console.log(`‚ùå –û–ø—Ä–æ—Å ${surveyId} —É–¥–∞–ª–µ–Ω –∏–∑ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞:', error);
  }
};

/**
 * –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
 */
export const clearCompletedSurveys = () => {
  try {
    const userId = getCurrentUserId();
    if (!userId) {
      console.log('‚ö†Ô∏è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ –º–æ–∂–µ–º –æ—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã');
      return;
    }
    
    const key = getUserCompletedSurveysKey(userId);
    localStorage.removeItem(key);
    console.log(`üßπ –í—Å–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã –æ—á–∏—â–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤:', error);
  }
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 */
export const getCompletedSurveysStats = () => {
  const completed = getCompletedSurveys();
  const userId = getCurrentUserId();
  return {
    userId: userId,
    total: completed.length,
    surveys: completed
  };
};
